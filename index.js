'use strict'
const QUIZ = [
           {
            id: "js-question1",
            question: "How are you (informal)?",
            number: 1,
            options: {
                option1: "¿Como estas?",
                option2: "¿Cómo estás?",
                option3: "¿Cómo eres?",
                option4: "¿Qué cómo?"
            },
            answer: "option2",
            
        },

        {
            id: "js-question2",
            question: "What are you doing (formal)?",
            number: 2,
            options: {
                option1: "¿Qué haga?",
                option2: "¿Qué haces?",
                option3: "¿Qué haciendo?",
                option4: "¿Qué está haciendo?"
            },
            answer: "option4",
        },
        
        {
            id: "js-question3",
            question: "What have you done (informal)?",
            number: 3,
            options: {
                option1: "¿Qué has hecho?",
                option2: "¿Qué ha hecho?",
                option3: "¿Qué has hace?",
                option4: "¿Qué habían hecho?"
            },
            answer: "option1",
        },
        
        {
            id: "js-question4",
            question: "What were you cooking (informal)?",
            number: 4,
            options: {
                option1: "¿Qué estás cocinando?",
                option2: "¿Qué cocinas?",
                option3: "¿Qué cocinaba?",
                option4: "¿Qué cocinabas?"
            },
            answer: "option4",
        },
        
        {
            id: "js-question5",
            question: "When will you visit (informal)?",
            number: 5,
            options: {
                option1: "¿Cuándo visitaré?",
                option2: "¿Cuándo visitará?",
                option3: "¿Cuándo visitarás?",
                option4: "¿Cuándo vas a venir?"
            },
            answer: "option3",
        },

]

//QUESTIONS returns an array of all questions from the QUIZ data model
let questions = QUIZ.map(item => {        
    return item.question;
});
// console.log(`questions is ${questions}`);

//ANSWERS returns an array of objects
let answers = QUIZ.map(item =>{ 
    return item.options 
});
// console.log(`answers is ${answers}`);

//NUMBER is INDEX used for functions: 1) returnQuestionAtI() 2) returnAnswers(number)
let number = 0;

//NUM is used to determine the question number user is on
let num = 1;


    function generateQuestionElement(quiz) {
//returns an html element with the QUESTION object property inserted as content
// console.log(`generateQuestionElement returns: <h4>${quiz.question}</h4>`);
        return `<h4>${quiz.question}</h4>`
    }
    
    function generateQuestionElementString(questions) {
//declare a variable to store an array created by .map(): for each QUIZ question, create an element using generateQuestionElement (line 112)
        const question = questions.map((question) => 
        generateQuestionElement(question));    
// console.log(`question is ${question}`)

//join the array into a string and return that string, with each item separated by a comma
        return question.join("");
    }

    function renderQuestionSet() {
//declare a variable to store a QUESTION element string generated by generateQuestionElementString (line 118)
        const questionString = 
//pass that QUESTION string element (generated from the QUIZ store) as the argument
        generateQuestionElementString(QUIZ);
//insert that ELEMENT into the DOM at <h4>
        $("h4").html(questionString);

// console.log(`questionString is ${questionString}`)
// console.log(`renderQuestionSet returns:`)
        // return questionString;
    }
    function generateAnswerElement(quiz) {
        let answers = quiz.options;
        answers.join(" ");
console.log(`answers is ${answers}`)

        let answerSet = Object.values(answers);
        console.log(`answerSet is:`)
        return answerSet.join("");

    }

    function generateAnswerElementString() {

    };

    
  // generateQuestionElement()
    function startQuiz() {

    }

    function showQuestionNumber() {

    }
    function handleNextButton() {

    }
    function handleStartButton() {

    }

  
  

    function showFeedback(answer) {
        // let correctAnswer = this.options["option2"];
        // if(answer === correctAnswer) {        
        //     return `Great! "${correctAnswer}" is correct;`
        // } else {
        //     return `Oops! "${correctAnswer}" is the correct answer.`
        // }
    }
//returnQuestionAtI() returns a question at the specified index, i.e., `NUMBER` 
    
    
    function restartQuiz() {
        
    };
    

// returnQuestionAtI(0);
function handleQuiz() {
    restartQuiz();
    showQuestionNumber();
    handleNextButton();
    handleStartButton();
    startQuiz();
    // handleNextButton();
    showFeedback();
    renderQuestionSet();
    generateAnswerElementString();
    generateAnswerElement(QUIZ);
    generateQuestionElementString(QUIZ);
    generateQuestionElement(QUIZ);
}

             
$(handleQuiz);

